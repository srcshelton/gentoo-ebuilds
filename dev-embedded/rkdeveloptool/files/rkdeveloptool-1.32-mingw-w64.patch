diff --git a/DefineHeader.h b/DefineHeader.h
index cea0f02..245e7db 100644
--- a/DefineHeader.h
+++ b/DefineHeader.h
@@ -21,12 +21,14 @@
 #include <sstream>
 #include <algorithm>
 using namespace std;
+#ifndef __MINGW32__
 typedef unsigned char BYTE, *PBYTE;
 typedef unsigned char UCHAR;
 typedef unsigned short WCHAR;
 typedef unsigned short USHORT;
 typedef unsigned int	UINT;
 typedef unsigned int	DWORD;
+#endif
 #define ALIGN(x, a)		__ALIGN_MASK((x), (a) - 1)
 #define __ALIGN_MASK(x, mask)	(((x) + (mask)) & ~(mask))
 #define RK28_SEC2_RESERVED_LEN 473
@@ -228,7 +230,7 @@ typedef enum{
 	CALL_LAST
 } ENUM_CALL_STEP;
 
-typedef void (*ProgressPromptCB)(DWORD deviceLayer, ENUM_PROGRESS_PROMPT promptID, long long totalValue, long long currentValue, ENUM_CALL_STEP emCall);
+typedef void (*ProgressPromptCB)(UINT deviceLayer, ENUM_PROGRESS_PROMPT promptID, long long totalValue, long long currentValue, ENUM_CALL_STEP emCall);
 
 //	bool WideStringToString(wchar_t *pszSrc, char *&pszDest);
 //	bool StringToWideString(char *pszSrc, wchar_t *&pszDest);
diff --git a/RKBoot.cpp b/RKBoot.cpp
index 7e73883..f58f1f5 100644
--- a/RKBoot.cpp
+++ b/RKBoot.cpp
@@ -15,11 +15,11 @@ bool CRKBoot::GetSignFlag()
 {
 	return m_bSignFlag;
 }
-DWORD CRKBoot::GetVersion()
+UINT CRKBoot::GetVersion()
 {
 	return m_version;
 }
-DWORD CRKBoot::GetMergeVersion()
+UINT CRKBoot::GetMergeVersion()
 {
 	return m_mergeVersion;
 }
diff --git a/RKBoot.h b/RKBoot.h
index 8f11545..5cb5acf 100644
--- a/RKBoot.h
+++ b/RKBoot.h
@@ -88,4 +88,4 @@ class CRKBoot {
 	void WCHAR_To_char(WCHAR *src, char *dst, int len);
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/RKDevice.cpp b/RKDevice.cpp
index 4963564..fdda3ee 100644
--- a/RKDevice.cpp
+++ b/RKDevice.cpp
@@ -105,7 +105,7 @@ char* CRKDevice::GetLayerName()
 	return m_layerName;
 }
 
-string CRKDevice::GetLayerString(DWORD dwLocationID)
+string CRKDevice::GetLayerString(UINT dwLocationID)
 {
 	char szLocation[32] = "\0";
 	sprintf(szLocation, "%d-%d", dwLocationID >> 8, dwLocationID & 0xff);
diff --git a/RKDevice.h b/RKDevice.h
index 2d81ae9..8e24360 100644
--- a/RKDevice.h
+++ b/RKDevice.h
@@ -95,7 +95,7 @@ class CRKDevice
 	bool GetFlashInfo();
 	int EraseAllBlocks(bool force_block_erase=false);
 	bool SetObject(CRKImage *pImage, CRKComm *pComm, CRKLog *pLog);
-	string GetLayerString(DWORD dwLocationID);
+	string GetLayerString(UINT dwLocationID);
 	CRKDevice(STRUCT_RKDEVICE_DESC &device);
 	~CRKDevice();
 protected:
@@ -128,4 +128,4 @@ class CRKDevice
 	char  m_layerName[32];
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/RKImage.cpp b/RKImage.cpp
index 7774354..5595979 100644
--- a/RKImage.cpp
+++ b/RKImage.cpp
@@ -6,11 +6,11 @@
  */
 #include "RKImage.h"
 
-DWORD CRKImage::GetVersion()
+UINT CRKImage::GetVersion()
 {
 	return m_version;
 }
-DWORD CRKImage::GetMergeVersion()
+UINT CRKImage::GetMergeVersion()
 {
 	return m_mergeVersion;
 }
@@ -35,15 +35,15 @@ USHORT CRKImage::GetBackupSize()
 	pBackupSize = (USHORT *)&m_reserved[12];
 	return *pBackupSize;
 }
-DWORD CRKImage::GetBootOffset()
+UINT CRKImage::GetBootOffset()
 {
 	return m_bootOffset;
 }
-DWORD CRKImage::GetBootSize()
+UINT CRKImage::GetBootSize()
 {
 	return m_bootSize;
 }
-DWORD CRKImage::GetFWOffset()
+UINT CRKImage::GetFWOffset()
 {
 	return m_fwOffset;
 }
@@ -295,4 +295,4 @@ int CRKImage::GetMd5Data(PBYTE &lpMd5, PBYTE &lpSignMd5)
 bool CRKImage::GetSignFlag()
 {
 	return m_bSignFlag;
-}
\ No newline at end of file
+}
diff --git a/RKLog.cpp b/RKLog.cpp
index 37dc62b..575df79 100644
--- a/RKLog.cpp
+++ b/RKLog.cpp
@@ -4,7 +4,13 @@
  *
  * SPDX-License-Identifier:	GPL-2.0+
  */
+
+#ifdef __MINGW32__
+#define _POSIX_THREAD_SAFE_FUNCTIONS
+#endif
+
 #include "RKLog.h"
+
 int file_stat(string strPath)
 {
 	struct stat statBuf;
diff --git a/crc.cpp b/crc.cpp
index 8bd2647..567770f 100644
--- a/crc.cpp
+++ b/crc.cpp
@@ -191,12 +191,12 @@ unsigned int crc32_le(unsigned int crc, unsigned char *p, unsigned int len)
 	unsigned int      *b =(unsigned int *)p;
 	unsigned int      *tab = crc32table_le;
 	crc = crc ^ 0xFFFFFFFF;
-	if((((long)b)&3 && len)){
+	if((((uintptr_t)b)&3 && len)){
 		do {
 			unsigned char *p = (unsigned char *)b;
 			DO_CRC(*p++);
 			b = (unsigned int *)p;
-		} while ((--len) && ((long)b)&3 );
+		} while ((--len) && ((uintptr_t)b)&3 );
 	}
 	if((len >= 4)){
 		unsigned int save_len = len & 3;
diff --git a/main.cpp b/main.cpp
index 72bd94b..e856267 100644
--- a/main.cpp
+++ b/main.cpp
@@ -65,7 +65,7 @@ void usage()
 	printf("TagSPL:\t\t\ttagspl <tag> <U-Boot SPL>\r\n");
 	printf("-------------------------------------------------------\r\n\r\n");
 }
-void ProgressInfoProc(DWORD deviceLayer, ENUM_PROGRESS_PROMPT promptID, long long totalValue, long long currentValue, ENUM_CALL_STEP emCall)
+void ProgressInfoProc(UINT deviceLayer, ENUM_PROGRESS_PROMPT promptID, long long totalValue, long long currentValue, ENUM_CALL_STEP emCall)
 {
 	string strInfoText="";
 	char szText[256];
@@ -3304,20 +3304,30 @@ int main(int argc, char* argv[])
 
 	g_ConfigItemVec.clear();
 	snprintf(szProgramProcPath, sizeof(szProgramProcPath), "/proc/%d/exe", getpid());
+#ifndef __MINGW32__
 	if (readlink(szProgramProcPath, szProgramDir, 256) == -1)
 		strcpy(szProgramDir, ".");
-	else {
+	else
+#else
+	strcpy(szProgramDir, ".");
+#endif
+	{
 		char *pSlash;
 		pSlash = strrchr(szProgramDir, '/');
 		if (pSlash)
 			*pSlash = '\0';
 	}
+
 	strLogDir = szProgramDir;
 	strLogDir +=  "/log/";
 	strConfigFile = szProgramDir;
 	strConfigFile += "/config.ini";
 	if (opendir(strLogDir.c_str()) == NULL)
+#ifndef __MINGW32__
 		mkdir(strLogDir.c_str(), S_IRWXU | S_IRWXG | S_IROTH);
+#else
+		mkdir(strLogDir.c_str());
+#endif
 	g_pLogObject = new CRKLog(strLogDir.c_str(), "log",true);
 
 	if(stat(strConfigFile.c_str(), &statBuf) < 0) {
