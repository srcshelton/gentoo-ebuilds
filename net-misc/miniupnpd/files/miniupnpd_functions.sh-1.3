#! /bin/sh
# $Id: miniupnpd_functions.sh,v 1.3 2019/04/03 16:25:55 nanard Exp $

set -u
set -o pipefail

# Customise these parameters if necessary:
EXTIF_default='ppp0'
#BRIF='br0'

DEBUG="${DEBUG:-1}"
CHAIN="${CHAIN:-MINIUPNPD}"
BRIDGED=${BRIDGED:-0}
CLEAN="${CLEAN:-}"

# Variables for internal use:
IPV6="${IPV6:-}"
EXT=${EXT:-1}

# Useful functions:
#
die() {
	echo >&2 "FATAL: ${*:-Unknown error}"
	exit 1
} # die

print() {
	local opt="${1}"
	local message="${*}"
	local spaces="   "

	(( DEBUG )) || return 1

	case "${opt:-}" in
		-n)
			shift
			message="${*}"
			;;
		-f)
			shift
			message="${*}"
			unset opt
			unset spaces
			;;
		*)
			unset opt
			;;
	esac

	if [[ -n "${message:-}" ]]; then
		echo ${opt:-} "${spaces:-}${message}"
	else
		echo
	fi

	return 0
} # print

doiptables() {
	local -a rule=( "${@}" )

	(( ${#rule[@]} )) || return 1
	[[ -n "${IPTABLES:-}" ]] || return 1

	(( DEBUG )) && echo "     ${IPTABLES} -w ${rule[*]}"

	LC_ALL='C' "${IPTABLES}" -w "${rule[@]}" || {
		echo >&2 "Failed: ${IPTABLES} -w ${rule[*]}"
		false
	}

	return ${?}
} # doiptables

existstablechain() {
	table="${1}"
	chain="${2}"
	lines=0

	if ! [[ -n "${table:-}" && -n "${chain:-}" ]]; then
		return 1
	fi

	if lines="$(
		doiptables --table "${table}" --list-rules "${chain}" 2>/dev/null |
		grep -v -- '^-N ' |
		wc -l
	)"; then
		return ${lines}
	else
		return 0
	fi
} # existstablechain

createtablechain() {
	table="${1}"
	chain="${2}"
	lines=0

	if ! [[ -n "${table:-}" && -n "${chain:-}" ]]; then
		return 1
	fi

	print "Checking for ${IPV6:+IPv6 }'${table}' chain '${chain}' ..."
	(( lines = $( existstablechain "${table}" "${chain}" ; echo ${?} ) ))
	if (( lines != 0 )); then
		print "   ${IPV6:+IPv6 }'${table}' chain '${chain}' already exits ..."
		if (( lines )); then
			if [[ "${CLEAN}" == 'yes' ]]; then
				print "   ... flushing ${lines} existing rules"
				doiptables --table "${table}" --flush "${chain}"
			else
				print "   ... '-c'lean not specified - aborting"
				return 1
			fi
		else
			print "   ... but is empty - continuing"
		fi
	else
		print "Creating ${IPV6:+IPv6 }'${table}' chain '${chain}'"
		doiptables --table "${table}" --new "${chain}"
	fi

	return ${?}
} # createtablechain

# Command locations:
#
IP="$( which ip )" || die "Unable to locate 'ip' command"
if [[ -z "${IPV6:-}" ]]; then
	IPTABLES="$( which iptables )" || die "Unable to locate 'iptables' command"
	IP="${IP} -4"
else
	IPTABLES="$( which ip6tables )" || die "Unable to locate 'ip6tables' command"
	IP="${IP} -6"
fi

while getopts ":b:c:fi:" opt; do
	case $opt in
		b)
			BRIF="${OPTARG}"
			BRIDGED=1
			;;
		c)
			CHAIN="${OPTARG}"
			;;
		f)
			CLEAN=yes
			;;
		i)
			EXTIF="${OPTARG}"
			;;
		\?)
			die "Invalid option '-${OPTARG}'"
			;;
		:)
			die "Option '-${OPTARG}' requires an argument"
			exit 1
			;;
	esac
done

if [[ -n "${EXT}" ]]; then
	if [[ -z "${EXTIF:-}" ]]; then
		EXTIF="$( LC_ALL='C' ${IP} route | grep 'default' | sed -e 's/.*dev[[:space:]]*//' -e 's/[[:space:]].*//' )"
		[[ -n "${EXTIF}" ]] || EXTIF="${EXTIF_default}"
	fi
	if [[ -z "${IPV6:-}" ]]; then
		EXTIP="$( LC_ALL='C' ${IP} addr show "${EXTIF}" | awk '/inet/ { print $2 }' | cut -d "/" -f 1 )"
	else
		EXTIP="$( LC_ALL='C' ${IP} addr show "${EXTIF}" | awk '/inet/ { print $2 }' | cut -d "/" -f 1 | grep -v '^fe80::' )"
	fi
fi
