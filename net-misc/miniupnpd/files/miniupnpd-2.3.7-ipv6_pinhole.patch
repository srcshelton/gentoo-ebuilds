From 814e85540dd5558ee09c0783b1e408a0371355f5 Mon Sep 17 00:00:00 2001
From: Thomas Bernard <miniupnp@free.fr>
Date: Sat, 22 Jun 2024 18:30:18 +0200
Subject: [PATCH] PCP: Check nonce when renewing IPv6 pinhole

fixes #748
---
 miniupnpd/Changelog.txt |  3 +++
 miniupnpd/pcpserver.c   | 14 +++++++++++---
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/miniupnpd/Changelog.txt b/miniupnpd/Changelog.txt
index d7f637b1..9a8b924b 100644
--- a/Changelog.txt
+++ b/Changelog.txt
@@ -1,5 +1,8 @@
 $Id: Changelog.txt,v 1.518 2024/06/22 22:30:01 nanard Exp $
 
+2024/07/11:
+  PCP: Check nonce when renewing IPv6 pinhole
+
 VERSION 2.3.7 : released on 2024/06/22
 
 2024/06/17:
diff --git a/miniupnpd/pcpserver.c b/miniupnpd/pcpserver.c
index 2e234bb2..6f1a748c 100644
--- a/pcpserver.c
+++ b/pcpserver.c
@@ -1008,21 +1008,29 @@ static int CreatePCPMap_FW(pcp_info_t *pcp_msg_info)
 #ifdef ENABLE_UPNPPINHOLE
 	int uid;
 	int r;
+	char desc[64];
 	/* first check if pinhole already exists */
 	uid = upnp_find_inboundpinhole(NULL, 0,
 					pcp_msg_info->mapped_str,
 					pcp_msg_info->int_port,
 					pcp_msg_info->protocol,
-					NULL, 0, /* desc */
+					desc, sizeof(desc),
 					NULL /* lifetime */);
 	if(uid >= 0) {
 		/* pinhole already exists, updating */
-		syslog(LOG_INFO, "updating pinhole to %s:%hu %s",
-		       pcp_msg_info->mapped_str, pcp_msg_info->int_port,
+		if (0 != strcmp(desc, pcp_msg_info->desc)) {
+			/* nonce does not match */
+			syslog(LOG_ERR, "Unauthorized to update pinhole : \"%s\" != \"%s\"",
+			       desc, pcp_msg_info->desc);
+			return PCP_ERR_NOT_AUTHORIZED;
+		}
+		syslog(LOG_INFO, "updating pinhole %d to %s:%hu %s",
+		       uid, pcp_msg_info->mapped_str, pcp_msg_info->int_port,
 		       (pcp_msg_info->protocol == IPPROTO_TCP)?"TCP":"UDP");
 		r = upnp_update_inboundpinhole((unsigned short)uid, pcp_msg_info->lifetime);
 		return r >= 0 ? PCP_SUCCESS : PCP_ERR_NO_RESOURCES;
 	} else {
+		/* create new */
 		r = upnp_add_inboundpinhole(NULL, 0,
 						pcp_msg_info->mapped_str,
 						pcp_msg_info->int_port,
