#!/bin/sh
#
# establish the chains that miniupnpd will update dynamically
#
# 'add' doesn't raise an error if the object already exists. 'create' does.
#

. "$( dirname "${0}" )/functions.sh"

if "${NFT}" --check list table inet "${TABLE}" >/dev/null 2>&1; then
	echo " * NFT table '${TABLE}' already exists"
	exit 0
fi

ruleset=''
if ! ruleset="$( mktemp -q --tmpdir miniupnpd.XXXXXXXX )"; then
	echo >&2 "Cannot create temporary file: ${?}"
	exit 1
fi
if [ ! -f "${ruleset}" ] || [ -s "${ruleset}" ] || [ ! -w "${ruleset}" ] ; then
	echo >&2 "Temporary file invalid"
	exit 1
fi

echo "Creating nftables structure ..."

cat > "${ruleset}" <<-EOF
	table inet ${TABLE} {
		chain forward {
			type filter hook forward priority 0;
			policy drop;

			# miniupnpd
			jump ${CHAIN}

			# Add other rules here
		}

		# miniupnpd
		chain ${CHAIN} {
		}
EOF

if [ "${TABLE}" != "${NAT_TABLE}" ]; then
	cat >> "${ruleset}" <<-EOF
		}

		table inet $NAT_TABLE {
	EOF
else
	echo >> "${ruleset}"
fi

cat >> "${ruleset}" <<-EOF
		chain prerouting {
			type nat hook prerouting priority -100;
			policy accept;

			# miniupnpd
			jump ${PREROUTING_CHAIN}

			# Add other rules here
		}

		chain postrouting {
			type nat hook postrouting priority 100;
			policy accept;

			# miniupnpd
			jump ${POSTROUTING_CHAIN}

			# Add other rules here
		}

		chain ${PREROUTING_CHAIN} {
		}

		chain ${POSTROUTING_CHAIN} {
		}
	}
EOF

"${NFT}" -f "${ruleset}"

rm "${ruleset}"
