###############################################################################
# Default lighttpd.conf for Gentoo.
###############################################################################

# {{{ variables
var.basedir					=   "/var/www/localhost"
var.logdir					=   "/var/log/lighttpd"
var.statedir					=   "/var/lib/lighttpd"
# }}}

# {{{ modules
# At the very least, mod_access and mod_accesslog should be enabled.
# All other modules should only be loaded if necessary.
# NOTE: the order of modules is important.
server.modules					=  (
	  "mod_access"
	, "mod_accesslog"
#	, "mod_alias"
#	, "mod_auth"
#	, "mod_deflate"
#	, "mod_evhost"
#	, "mod_expire"
#	, "mod_magnet"
#	, "mod_proxy"
#	, "mod_redirect"
#	, "mod_rewrite"
#	, "mod_rrdtool"
#	, "mod_setenv"
#	, "mod_simple_vhost"
#	, "mod_ssi"
#	, "mod_status"
#	, "mod_userdir"
#	, "mod_webdav"
)
# }}}

# {{{ includes
# Map file extensions to mime types for Content-Type using mime.conf
# shipped with lighttpd code, based on Fedora /etc/mime.types mapping.
#
# Option: comment out on embedded systems to save some memory and use
# lighttpd built-in defaults, which include a subset of common web mime types.
#
# Option: use lighttpd doc/scripts/create-mime.conf.pl to generate mapping
# from Gentoo /etc/mime.types at lighttpd startup.
#
include "/etc/lighttpd/mime.conf"
# }}}

# {{{ server settings
server.username					=   "lighttpd"
server.groupname				=   "lighttpd"

server.document-root				=    var.basedir + "/htdocs"
server.pid-file					=   "/var/run/lighttpd.pid"

server.errorlog					=    var.logdir + "/error.log"
# Log errors to syslog instead:
#server.errorlog-use-syslog			=   "enable"

server.indexfiles				=  (
	  "index.php"
	, "index.html"
	, "index.htm"
	, "default.htm"
)

#server.tag					=   "lighttpd"

server.follow-symlink				=   "enable"

# event handler (defaults to "poll")
# See performance.txt
#
# ... for >= linux-2.4:
#server.event-handler				=   "linux-rtsig"
# ... for >= linux-2.6:
server.event-handler				=   "linux-sysepoll"
# ... for FreeBSD:
#server.event-handler				=   "freebsd-kqueue"

# chroot to directory (defaults to no chroot)
#server.chroot					=   "/"

# bind to port (defaults to 80)
#server.port					=    81

# bind to name (defaults to all interfaces)
#server.bind					=   "grisu.home.kneschke.de"

# error-handler for status 404
#server.error-handler-404			=   "/error-handler.html"
#server.error-handler-404			=   "/error-handler.php"

# Format: <errorfile-prefix><status-code>.html
# -> ..../status-404.html for 'File not found'
#server.errorfile-prefix			=    var.basedir + "/error/status-"

# support for caching stat() calls
#server.stat-cache-engine			= "inotify"

# If lighttpd was build with IPv6 support, and you would like to listen on IPv6,
# uncomment the following:
#server.use-ipv6				=   "enable"
# }}}

# {{{ mod_staticfile
# Which extensions should not be handled via static-file transfer
# (extensions that are usually handled by mod_cgi, mod_fastcgi, etc).
static-file.exclude-extensions			=  (
	  ".php"
	, ".pl"
	, ".cgi"
	, ".fcgi"
)
# }}}

# {{{ mod_accesslog
accesslog.filename				=    var.logdir + "/access.log"
# }}}

# {{{ mod_dirlisting
# Enable directory listings
#dir-listing.activate				=   "enable"

# Don't list hidden files/directories
#dir-listing.hide-dotfiles			=   "enable"

# Use a different CSS for directory listings
#dir-listing.external-css			=   "/path/to/dir-listing.css"

# List of regular expressions - files that match any of the
# specified regular expressions will be excluded from directory
# listings.
#dir-listing.exclude				=  (
#	  "^\."
#	, "~$"
# }}}

# {{{ mod_access
# See access.txt
#
url.access-deny					=  (
	  "~"
	, ".inc"
)
# }}}

# {{{ mod_userdir
# See userdir.txt
#
#userdir.path					=   "public_html"
#userdir.exclude-user				=  ("root")
# }}}

# {{{ mod_ssi
# See ssi.txt
#
#ssi.extension					=  (".shtml")
# }}}

# {{{ mod_ssl
# See ssl.txt
#
#ssl.engine					=   "enable"
#ssl.pemfile					=   "server.pem"
# }}}

# {{{ mod_status
# See status.txt
#
#status.status-url				=   "/server-status"
#status.config-url				=   "/server-config"
# }}}

# {{{ mod_simple_vhost
# See simple-vhost.txt
#
# If you want name-based virtual hosting add the next three settings and load
# mod_simple_vhost:
#document-root					=    virtual-server-root + virtual-server-default-host + virtual-server-docroot
# or
#document-root					=    virtual-server-root + http-host + virtual-server-docroot
#
#simple-vhost.server-root			=   "/home/weigon/wwwroot/servers/"
#simple-vhost.default-host			=   "grisu.home.kneschke.de"
#simple-vhost.document-root			=   "/pages/"
# }}}

# {{{ mod_deflate
# See compress.txt
#
#deflate.cache-dir				=    var.statedir + "/cache/compress"
#deflate.mimetypes				=  (
#	  "text/plain"
#	, "text/html"
#)
# }}}

# {{{ mod_proxy
# See proxy.txt
#
#proxy.server					=  (
#	  ".php"				=> (
#		  "localhost"			=> (
#			  "host"		=>  "192.168.0.101"
#			, "port"		=>   80
#		  )
#	  )
#)
# }}}

# {{{ mod_auth
# See authentication.txt
#
#auth.backend					=   "plain"
#auth.backend.plain.userfile			=   "lighttpd.user"
#auth.backend.plain.groupfile			=   "lighttpd.group"

#auth.backend.ldap.hostname			=   "localhost"
#auth.backend.ldap.base-dn			=   "dc=my-domain,dc=com"
#auth.backend.ldap.filter			=   "(uid=$)"

#auth.require					=  (
#	  "/server-status"			=> (
#		  "method"			=>  "digest"
#		, "realm"			=>  "download archiv"
#		, "require"			=>  "user=jan"
#	  )
#	, "/server-info"			=> (
#		  "method"			=>  "digest"
#		, "realm"			=>  "download archiv"
#		, "require"			=>  "valid-user"
#	  )
#)
# }}}

# {{{ mod_rewrite
# See rewrite.txt
#
#url.rewrite					=  (
#	  "^/$"					=>  "/server-status"
#)
# }}}

# {{{ mod_redirect
# See redirect.txt
#
#url.redirect					=  (
#	  "^/wishlist/(.+)"			=>  "http://www.123.org/$1"
#)
# }}}

# {{{ mod_evhost
# Define a pattern for the host url finding:
# %% => % sign
# %0 => domain name + tld
# %1 => tld
# %2 => domain name without tld
# %3 => subdomain 1 name
# %4 => subdomain 2 name
#
#evhost.path-pattern				=   "/home/storage/dev/www/%3/htdocs/"
# }}}

# {{{ mod_expire
#expire.url					=  (
#	  "/buggy/"				=>  "access 2 hours"
#	, "/asdhas/"				=>  "access plus 1 seconds 2 minutes"
#)
# }}}

# {{{ mod_rrdtool
# See rrdtool.txt
#
#rrdtool.binary					=   "/usr/bin/rrdtool"
#rrdtool.db-name				=    var.statedir + "/lighttpd.rrd"
# }}}

# {{{ mod_setenv
# See setenv.txt
#
#setenv.add-request-header			=  (
#	  "TRAV_ENV"				=>  "mysql://user@host/db"
#)
#
#setenv.add-response-header			=  (
#	  "X-Secret-Message"			=>  "42"
#)
# }}}

# {{{ mod_webdav
# See webdav.txt
#
#$HTTP["url"]					=~  "^/dav($|/)" {
#	webdav.activate				=   "enable"
#	webdav.is-readonly			=   "enable"
#}
# }}}

# {{{ extra rules
#
# Set Content-Encoding and reset Content-Type for browsers that
# support decompressing on-the-fly (requires mod_setenv)
#$HTTP["url"]					=~  "\.gz$" {
#	setenv.add-response-header		=  (
#		  "Content-Encoding"		=>  "x-gzip"
#	)
#	mimetype.assign				=  (
#		  ".gz"				=>  "text/plain"
#	)
#}
#
#$HTTP["url"]					=~  "\.bz2$" {
#	setenv.add-response-header		=  (
#		  "Content-Encoding"		=>  "x-bzip2"
#	)
#	mimetype.assign				=  (
#		  ".bz2"			=>  "text/plain"
#	)
#}
# }}}

# {{{ debug
#debug.log-request-header			=   "enable"
#debug.log-response-header			=   "enable"
#debug.log-request-handling			=   "enable"
#debug.log-file-not-found			=   "enable"
# }}}

# {{{ CGI includes
# ... uncomment for cgi support:
#include "mod_cgi.conf"
# ... uncomment for php/fastcgi support:
#include "mod_fastcgi.conf"
# }}}

# vim: set ft=conf foldmethod=marker noet :
