# shellcheck shell=bash

# Check for deprecated use of /run in place of /var/run

run_check() {
	if [[ -d "${ED%/}"/etc ]]; then
		if
			[[ -d "${ED%/}"/etc/init.d ]] ||
				[[ -d "${ED%/}"/etc/conf.d ]]
		then
			if
				sed 's/#.*$//' "${ED%/}"/etc/{init,conf}.d/* 2>/dev/null |
						grep '/run/' |
						grep -v '/var/run/' |
						grep -q '/run/'
			then
				local -A list=()
				local -a files=()

				while read -r i; do
					if ! grep -q " /${i#"${ED}"} " <<<" ${QA_RUN_ALLOWED[*]:-} "; then
						list["${i#"${ED}"}"]=1
					fi
				done < <(
					grep -H '/run/' "${ED%/}"/etc/{init,conf}.d/* 2>/dev/null |
						sed 's/#.*$//' |
						grep -v '/var/run/' |
						grep '/run/' |
						cut -d':' -f 1
				)
				files=( "${!list[@]}" )

				# It'd be nicer to fix this in the ebuild itself, but this
				# approach at least allows upstream ebuilds to remain
				# unchanged...
				if
					(( 1 == ${#files[@]} )) &&
						[[ "${files[*]}" =~ etc/init.d/bootmisc ]]
				then
					:
				elif [[ -n "${files[*]:-}" ]]; then
					eqawarn "Repo QA Notice: files referencing /run:"
					eqatag -v using-run "${files[@]/#//}"
					die "Aborting due to Repo QA concerns: ${#files[@]} files reference /run"
				fi
			fi
		fi
	fi
	if [[ -d "${ED%/}"/run ]]; then
		die "Aborting due to Repo QA concerns: ebuild creates /run"
	fi
}

run_check
:  # guarantee successful exit

# vi: set ft=sh syntax=bash:
