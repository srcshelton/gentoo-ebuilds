#!/sbin/openrc-run
# Copyright 1999-2019 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

# This script is based on upstream file
# LVM2.2.02.67/scripts/lvm2_monitoring_init_red_hat.in

depend() {
	# As of .67-r1, we call ALL lvm start/stop scripts with --sysinit, that
	# means dmeventd is NOT notified, as it cannot be safely running
	need lvm dmeventd
}

vgchange="/sbin/vgchange"
vgs="/sbin/vgs"

start() {
	local vglist='' vg=''
	local -i ret=0 rc=0

	# TODO do we want to separate out already active groups only?
	vglist="$(
		"${vgs}" --noheadings -o name --rows 2>/dev/null |
			cut -d' ' -f 2-
	)" ||
		(( rc = ${?} ))
	if (( rc )); then
		eerror "Command '${vgs} --noheadings -o name --rows' failed: ${rc}"
	fi

	(( rc = 0 ))
	for vg in ${vglist}; do
		ebegin "Starting LVM monitoring for VG ${vg}:"
		"${vgchange}" --monitor y --poll y ${vg} || rc=${?}
		eend ${rc}
		if (( rc )); then
			eerror "Command '${vgchange} --monitor y --poll y ${vg}' failed: ${rc}"
			(( ret += rc ))
		fi
	done
	return ${ret}
}

stop() {
	local vglist='' vg=''
	local -i ret=0 rc=0

	# TODO do we want to separate out already active groups only?
	vglist="$(
		"${vgs}" --noheadings -o name --rows 2>/dev/null |
			cut -d' ' -f 2-
	)" ||
		(( rc = ${?} ))
	if (( rc )); then
		eerror "Command '${vgs} --noheadings -o name --rows' failed: ${rc}"
	fi

	(( rc = 0 ))
	for vg in ${vglist}; do
		ebegin "Stopping LVM monitoring for VG ${vg}:"
		"${vgchange}" --monitor n ${vg} || rc=${?}
		eend ${rc}
		if (( rc )); then
			eerror "Command '${vgchange} --monitor y --poll y ${vg}' failed: ${rc}"
			(( ret += rc ))
		fi
	done
	return ${ret}
}
