From be22dbbe5638bb7b783ade5af53aa84eb77d2494 Mon Sep 17 00:00:00 2001
From: Florian Klink <flokli@flokli.de>
Date: Sun, 27 Dec 2020 02:49:30 +0100
Subject: [PATCH] CMakeLists: Introduce AMD64 (to fix x86_64/--native builds)

CMakeLists.txt currently assumes everything not ARM64 to be ARM32. When
compiling on x86_64-linux, this tries to build some binaries that are
arm(32) only.

Some tools make some sense to use even on non-ARM workstations. For
example, `dtmerge` can be used to merge .dtb files with overlays on a
x86_64 machine (while mounting an sdcard for example).

This introduces a "AMD64" cmake flag, that's set in the `buildme` script
only when compiling for x86_64.

Signed-off-by: Florian Klink <flokli@flokli.de>
---
 CMakeLists.txt                                | 24 ++++++++++++++-----
 buildme                                       |  4 +++-
 host_applications/linux/CMakeLists.txt        |  2 +-
 .../linux/apps/raspicam/CMakeLists.txt        |  2 +-
 interface/vmcs_host/CMakeLists.txt            |  2 +-
 5 files changed, 24 insertions(+), 10 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fe67fc874..167a5fe48 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,15 +8,24 @@ SET(PROJECT_VER_PATCH 0)
 SET(PROJECT_VER "${PROJECT_VER_MAJOR}.${PROJECT_VER_MINOR}.${PROJECT_VER_PATCH}")
 SET(PROJECT_APIVER "${PROJECT_VER}")
 
-if(ARM64)
-   set(BUILD_MMAL FALSE)
-   set(BUILD_MMAL_APPS FALSE)
-   set(PKGCONFFILES bcm_host.pc)
-else()
+# This project is traditionally expecting to be compiled on armv6,7.
+# Due to CMake limitations, if the platform (in the host/platform/target
+# triplet) this is compiled for differs from that, one of the following targets
+# need to be set:
+# -DARM64=ON (if compiling for aarch64)
+# -DAMD64=ON (if compiling for x86_64)
+
+# broken on anything except ARM32 currently
+if(NOT ARM64 AND NOT AMD64)
    set(BUILD_MMAL TRUE)
    set(BUILD_MMAL_APPS TRUE)
    set(PKGCONFFILES bcm_host.pc brcmegl.pc brcmglesv2.pc brcmvg.pc vcsm.pc mmal.pc)
+else()
+   set(BUILD_MMAL FALSE)
+   set(BUILD_MMAL_APPS FALSE)
+   set(PKGCONFFILES bcm_host.pc)
 endif()
+
 set(vmcs_root ${PROJECT_SOURCE_DIR})
 get_filename_component(VIDEOCORE_ROOT . ABSOLUTE)
 
@@ -66,7 +75,9 @@ endif()
 add_subdirectory(interface/vcos)
 add_subdirectory(interface/vmcs_host)
 add_subdirectory(interface/vchiq_arm)
-if(NOT ARM64)
+
+# The khronos libraries include arm32 assembly
+if(NOT ARM64 AND NOT AMD64)
    add_subdirectory(interface/khronos)
 endif()
 
@@ -82,7 +93,8 @@ if(BUILD_MMAL_APPS)
 add_subdirectory(host_applications/android/apps/vidtex)
 endif(BUILD_MMAL_APPS)
 
-if(NOT ARM64)
+# ARM32 only, as it needs the khronos libraries
+if(NOT ARM64 AND NOT AMD64)
    add_subdirectory(middleware/openmaxil)
 endif()
 
diff --git a/buildme b/buildme
index 9e2d405e1..d65c670f1 100755
--- a/buildme
+++ b/buildme
@@ -2,6 +2,7 @@
 BUILDTYPE=Release
 ARCH=$(uname -m)
 ARM64=OFF
+AMD64=OFF
 CMAKE_TOOLCHAIN_FILE=../../../makefiles/cmake/toolchains/arm-linux-gnueabihf.cmake
 
 if [ "$1" = "--debug" ]; then
@@ -33,10 +34,11 @@ if [ $ARCH = "armv6l" ] || [ $ARCH = "armv7l" ] || [ $ARCH = "aarch64" ]; then
 		sudo make install
 	fi
 elif [ "$1" = "--native" ]; then
+	AMD64=ON
 	# Build natively on the host
 	mkdir -p build/native/$BUILDSUBDIR
 	pushd build/native/$BUILDSUBDIR
-	cmake -DCMAKE_BUILD_TYPE=$BUILDTYPE ../../..
+	cmake -DCMAKE_BUILD_TYPE=$BUILDTYPE -DAMD64=$AMD64../../..
 	shift
 	make -j `nproc` $*
 else
diff --git a/host_applications/linux/CMakeLists.txt b/host_applications/linux/CMakeLists.txt
index 928b63750..28bc8e4a5 100644
--- a/host_applications/linux/CMakeLists.txt
+++ b/host_applications/linux/CMakeLists.txt
@@ -4,7 +4,7 @@ add_subdirectory(libs/bcm_host)
 add_subdirectory(apps/gencmd)
 add_subdirectory(apps/tvservice)
 add_subdirectory(apps/vcmailbox)
-if(NOT ARM64)
+if(NOT ARM64 AND NOT AMD64)
    add_subdirectory(apps/raspicam)
    add_subdirectory(libs/sm)
    add_subdirectory(apps/smem)
diff --git a/host_applications/linux/apps/raspicam/CMakeLists.txt b/host_applications/linux/apps/raspicam/CMakeLists.txt
index eb1ef7c89..09cc4a138 100644
--- a/host_applications/linux/apps/raspicam/CMakeLists.txt
+++ b/host_applications/linux/apps/raspicam/CMakeLists.txt
@@ -40,7 +40,7 @@ set (COMMON_SOURCES
    RaspiGPS.c
    libgps_loader.c)
 
-if(NOT ARM64)
+if(NOT ARM64 AND NOT AMD64)
   set (EGL_LIBS brcmGLESv2 brcmEGL)
   set (EGL_SOURCES RaspiTex.c RaspiTexUtil.c tga.c)
   set (GL_SCENE_SOURCES
diff --git a/interface/vmcs_host/CMakeLists.txt b/interface/vmcs_host/CMakeLists.txt
index cbef80c57..c9ea88b12 100755
--- a/interface/vmcs_host/CMakeLists.txt
+++ b/interface/vmcs_host/CMakeLists.txt
@@ -17,7 +17,7 @@ add_library(vchostif
 #add_library(bufman            vc_vchi_bufman.c            )
 set(INSTALL_TARGETS vchostif)
 
-if(NOT ARM64)
+if(NOT ARM64 AND NOT AMD64)
 	# OpenMAX/IL component service
 	add_library(vcilcs
 		    vcilcs.c vcilcs_in.c vcilcs_out.c vcilcs_common.c)
