--- a/tests/test-slirp4netns-sandbox.sh
+++ b/tests/test-slirp4netns-sandbox.sh
@@ -21,7 +21,7 @@ grep cap_net_bind_service slirp.caps
 grep -v cap_sys_admin slirp.caps
 rm slirp.caps
 test -e /proc/$slirp_pid/root/etc
-test -e /proc/$slirp_pid/root/run
+test -e /proc/$slirp_pid/root/var/run
 test \! -e /proc/$slirp_pid/root/home
 test \! -e /proc/$slirp_pid/root/root
 test \! -e /proc/$slirp_pid/root/var

--- a/tests/test-slirp4netns-sandbox-no-unmount.sh
+++ b/tests/test-slirp4netns-sandbox-no-unmount.sh
@@ -9,10 +9,10 @@ fi
 
 . $(dirname $0)/common.sh
 
-mount -t tmpfs tmpfs /run
-mkdir /run/foo
-mount -t tmpfs tmpfs /run/foo
-mount --make-rshared /run
+mount -t tmpfs tmpfs /var/run
+mkdir /var/run/foo
+mount -t tmpfs tmpfs /var/run/foo
+mount --make-rshared /var/run
 
 unshare -n sleep infinity &
 child=$!
@@ -29,4 +29,4 @@ trap cleanup EXIT
 
 wait_for_network_device $child tap11
 
-findmnt /run/foo
+findmnt /var/run/foo

--- a/slirp4netns.1
+++ b/slirp4netns.1
@@ -93,10 +93,10 @@ specify user namespace path
 .PP
 \fB\fC\-\-enable\-sandbox\fR (since v0.4.0)
 enter the user namespace and create a new mount namespace where only /etc and
-/run are mounted from the host.
+/var/run are mounted from the host.
 
 .PP
-Requires \fB\fC/etc/resolv.conf\fR not to be a symlink to a file outside /etc and /run.
+Requires \fB\fC/etc/resolv.conf\fR not to be a symlink to a file outside /etc and /var/run.
 
 .PP
 When running as the root, the process does not enter the user namespace but all
@@ -441,7 +441,7 @@ The easiest way to allow inter\-namespac
 
 .nf
 (host)$ nsenter \-t $(cat /tmp/pid) \-U \-\-preserve\-credentials \-n \-m
-(namespace)$ mount \-t tmpfs none /run
+(namespace)$ mount \-t tmpfs none /var/run
 (namespace)$ ip netns add foo
 (namespace)$ ip netns add bar
 (namespace)$ ip link add veth\-foo type veth peer name veth\-bar

--- a/slirp4netns.1.md
+++ b/slirp4netns.1.md
@@ -66,9 +66,9 @@ specify user namespace path
 
 `--enable-sandbox` (since v0.4.0)
 enter the user namespace and create a new mount namespace where only /etc and
-/run are mounted from the host.
+/var/run are mounted from the host.
 
-Requires `/etc/resolv.conf` not to be a symlink to a file outside /etc and /run.
+Requires `/etc/resolv.conf` not to be a symlink to a file outside /etc and /var/run.
 
 When running as the root, the process does not enter the user namespace but all
 the capabilities except `CAP_NET_BIND_SERVICE` are dropped.
@@ -281,7 +281,7 @@ The easiest way to allow inter-namespace
 
 ```console
 (host)$ nsenter -t $(cat /tmp/pid) -U --preserve-credentials -n -m
-(namespace)$ mount -t tmpfs none /run
+(namespace)$ mount -t tmpfs none /var/run
 (namespace)$ ip netns add foo
 (namespace)$ ip netns add bar
 (namespace)$ ip link add veth-foo type veth peer name veth-bar

--- a/sandbox.c
+++ b/sandbox.c
@@ -49,25 +49,26 @@ static int add_mount(const char *from, c
 }
 
 /* Bind /etc/resolv.conf if it is a symlink to a file outside /etc or
- * /run. */
+ * /var/run. */
 static int bind_escaped_resolv_conf(const char *root)
 {
     char *real_resolv = realpath("/etc/resolv.conf", NULL);
 
     /* Doesn't exist or is not an escaping symlink */
     if (real_resolv == NULL || g_str_has_prefix(real_resolv, "/etc") ||
-        g_str_has_prefix(real_resolv, "/run")) {
+        g_str_has_prefix(real_resolv, "/var/run") ||
+        g_str_has_prefix(real_resolv, "/run")) {
         free(real_resolv);
         return 0;
     }
 
     char *resolv_dest = g_strconcat(root, real_resolv, NULL);
     char *resolv_dest_dir = g_path_get_dirname(resolv_dest);
     int ret = 0;

     fprintf(stderr,
-            "sandbox: /etc/resolv.conf (-> %s) seems a symlink to a file "
-            "outside {/etc, /run}, attempting to bind it as well.\n",
+            "sandbox: /etc/resolv.conf (-> %s) seems to be a symlink to a file "
+            "outside {/etc, /var/run, /run}, attempting to bind it as well.\n",
             real_resolv);
 
     ret = g_mkdir_with_parents(resolv_dest_dir, 0755);
@@ -100,7 +101,7 @@ static int bind_escaped_resolv_conf(cons
 
 /* lock down the process doing the following:
  - create a new mount namespace
- - bind mount /etc and /run from the host
+ - bind mount /etc and /var/run from the host
  - pivot_root in the new tmpfs.
  - drop all capabilities.
 */
@@ -140,9 +141,15 @@ int create_sandbox()
         return ret;
     }
 
-    ret = mkdir("/tmp/run", 0755);
+    ret = mkdir("/tmp/var", 0755);
     if (ret < 0) {
-        fprintf(stderr, "cannot mkdir /run\n");
+        fprintf(stderr, "cannot mkdir /var\n");
+        return ret;
+    }
+
+    ret = mkdir("/tmp/var/run", 0755);
+    if (ret < 0) {
+        fprintf(stderr, "cannot mkdir /var/run\n");
         return ret;
     }
 
@@ -156,7 +162,7 @@ int create_sandbox()
         return ret;
     }
 
-    ret = add_mount("/run", "/tmp/run");
+    ret = add_mount("/var/run", "/tmp/var/run");
     if (ret < 0) {
         return ret;
     }
