--- a/src/checkpath/checkpath.c
+++ b/src/checkpath/checkpath.c
@@ -216,7 +216,7 @@ static int do_check(char *path, uid_t ui
 			umask(u);
 			if (fd == -1) {
 				free(name);
-				eerror("%s: open: %s", applet, strerror(errno));
+				eerror("%s: open(%s): %s", applet, name, strerror(errno));
 				return -1;
 			}
 			if (readfd != -1 && trunc)
@@ -232,15 +232,15 @@ static int do_check(char *path, uid_t ui
 			umask(u);
 			if (r == -1 && errno != EEXIST) {
 				free(name);
-				eerror("%s: mkdirat: %s", applet,
-				    strerror (errno));
+				eerror("%s: mkdirat(%s): %s", applet,
+				    path, strerror (errno));
 				return -1;
 			}
 			readfd = openat(dirfd, name, readflags);
 			if (readfd == -1) {
 				free(name);
-				eerror("%s: unable to open directory: %s", applet,
-						strerror(errno));
+				eerror("%s: unable to open directory '%s': %s", applet,
+						name, strerror(errno));
 				return -1;
 			}
 		} else if (type == inode_fifo) {
@@ -252,15 +252,15 @@ static int do_check(char *path, uid_t ui
 			umask(u);
 			if (r == -1 && errno != EEXIST) {
 				free(name);
-				eerror("%s: mkfifo: %s", applet,
-				    strerror (errno));
+				eerror("%s: mkfifo(%s): %s", applet,
+				    path, strerror (errno));
 				return -1;
 			}
 			readfd = openat(dirfd, name, readflags);
 			if (readfd == -1) {
 				free(name);
-				eerror("%s: unable to open fifo: %s", applet,
-						strerror(errno));
+				eerror("%s: unable to open fifo '%s': %s", applet,
+						name, strerror(errno));
 				return -1;
 			}
 		}
@@ -298,7 +298,7 @@ static int do_check(char *path, uid_t ui
 			}
 			einfo("%s: correcting mode", path);
 			if (fchmod(readfd, mode)) {
-				eerror("%s: chmod: %s", applet, strerror(errno));
+				eerror("%s: chmod(%s): %s", applet, path, strerror(errno));
 				close(readfd);
 				return -1;
 			}
@@ -317,7 +317,7 @@ static int do_check(char *path, uid_t ui
 			}
 			einfo("%s: correcting owner", path);
 			if (fchown(readfd, uid, gid)) {
-				eerror("%s: chown: %s", applet, strerror(errno));
+				eerror("%s: chown(%s): %s", applet, path, strerror(errno));
 				close(readfd);
 				return -1;
 			}
