#!/sbin/openrc-run
# Copyright 1999-2015 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

depend()
{
	provide dev
	need dev-mount sysfs
}

find_mdev()
{
	if [ -x /sbin/mdev ] ; then
		echo "/sbin/mdev"
	else
		echo "/bin/busybox mdev"
	fi
}

populate_mdev()
{
	local rc=0

	ebegin "Populating '/dev' with existing devices using \"mdev -s\""
	$(find_mdev) -s
	rc=$?

	for i in /sys/class/net/*/uevent; do
		[ -w "$i" ] && printf 'add' >"$i"
	done
	for i in /sys/bus/usb/devices/*; do
		case "${i##*/}" in
			[0-9]*-[0-9]*)
				[ -w "$i"/uevent ] && printf 'add' >"$i"/uevent
				;;
		esac
	done

	eend $rc

	return 0
}

seed_dev()
{
	# copy over any persistent things
	if [ -d /lib/mdev/devices ] ; then
		cp -RPp /lib/mdev/devices/* /dev 2>/dev/null
	fi

}

mount_it()
{
	if fstabinfo --quiet /dev ; then
		mount -n /dev
	else
		# Some devices require 'exec', Bug #92921
		mount -n -t devtmpfs -o "exec,nosuid,mode=0755,size=8M" mdev /dev
	fi
}

start()
{
	# Setup temporary storage for /dev
	if [ -r /proc/mounts ] && ! grep -Eq "^[^ ]+ /dev (dev)?tmpfs" /proc/mounts; then
		ebegin "Mounting /dev for mdev"
		mount_it
		eend $?
	fi

	seed_dev

	# Setup hotplugging (if possible)
	if [ -e /proc/sys/kernel/hotplug ] ; then
		ebegin "Setting up mdev as hotplug agent"
		echo $(find_mdev) > /proc/sys/kernel/hotplug
		eend 0
	else
		eerror "Kernel lacks uevent helper support"
		eerror "No mdev rules will be processed when new devices are hotplugged"
		ewarn "Recompile your kernel with 'CONFIG_UEVENT_HELPER=y' to resolve this issue"
	fi

	if get_bootparam "nocoldplug" ; then
		ewarn "Skipping mdev coldplug as requested in kernel cmdline"
	else
		populate_mdev
	fi
}
