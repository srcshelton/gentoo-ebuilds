# tmpfs - Mirror segments of a mounted filesystem to a network-mounted
# or memory-based backing store...

#
# OVERLAY_ROOT_{location} allows the destination for 'location' to be
# customised;
# {location}_PATH allows the original location itself to be modified.
#
# Note that the former requires an inital '/', but the latter should
# not have one.
#
# Either OVERLAY_ROOT or OVERLAY_ROOT and PATH may be specified.
#
# OVERLAY_ROOT/PATH will replace /PATH.
#


# Specify default location to which to mirror data:
#
#OVERLAY_ROOT="<local nfs mount-point>"

# Relocate /var to an NFS-mounted portage sub-directory:
#
#OVERLAY_ROOT_var="/usr/portage/local/hostname/var"
#var_PATH="var"

# Mount a ram-backed filesystem on /mnt/ram and then relocate /var/.mem to this
# location.  Items in /var can then be symlinked into .mem (for example
# /var/tmp -> ./.mem/tmp) to limit writes to flash-backed filesystems.  Data in
# /var/lock and /var/run is mirrored back to disk on shutdown, but is not
# copied into RAM on startup, to prevent issues with state locks and PID files.
# Finally, we ensure that we start *after* swap is enabled, to ensure that we
# don't trigger an OOM situation on boot.  The 'size' parameter in the FSTAB
# entry should be sized appropriately to the system - 96m is suitable for a
# router with 256MB of RAM:
#
OVERLAY_ROOT_ram="/mnt/ram"
ram_PATH="var/.mem"
ram_FSTAB="ram /mnt/ram tmpfs nodev,nosuid,noexec,size=96m"
ram_EXCLUDE="/var/lock/* /var/run/*"
RC_NEED_ram="localmount"
RC_AFTER_ram="swap"

# Provide a mount-point on /var/.nfs which is mirrored to an NFS mount.  This
# is useful to store the dynamic data for applications which generate more data
# than can be held in memory.  In this case, ntop is made to save its data via
# NFS by ensuring that there is a symlink /var/lib/ntop -> ../.nfs/lib/ntop:
#
#OVERLAY_ROOT_nfs="/usr/portage/local/hostname"
#nfs_PATH="var/.nfs"
#RC_NEED_nfs="localmount nfsmount net.ef0"
#RC_USE_nfs="sshd"

# NB: If DEBUG is set to a non-zero value, then commits will be *simulated*
#     only, and no changes will be committed to disk.
DEBUG=0
